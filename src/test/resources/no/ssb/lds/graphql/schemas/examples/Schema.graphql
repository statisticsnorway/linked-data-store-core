type AdministrativeDetails {
    administrativeDetailType: String
    values: [String]
}

type Agent {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentDetails: [AgentDetails]
    agentInRoles: [AgentInRole]
    agentType: String
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    isExternal: [Boolean]
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    parentAgent: String
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type AgentDetails {
    agentDetailType: String
    values: [String]
}

type AgentInRole {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    agents: [Agent]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    role: [Role]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type AttributeComponent {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    assignmentStatus: String
    attachmentLevel: String
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    format: String
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    representedVariable: [RepresentedVariable]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type ComponentRelationship {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    sourceComponents: [String]
    targetComponent: String
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type DataResource {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    dataResourceType: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    parentDataResource: [DataResource]
    parentInformationResource: String
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type DescribedValueDomain {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    dataType: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    maxDecimals: Float
    maxLength: Float
    maxValue: Float
    minDecimals: Float
    minLength: Float
    minValue: Float
    name: [MultilingualText]
    optional: [Boolean]
    unitOfMeasure: String
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type DimentionalDataSet {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    dataExistsFromDate: String
    dataExistsUntilDate: String
    dataResource: [DataResource]
    description: [MultilingualText]
    dimentionalDataStructure: [DimentionalDataStructure]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    temporalityType: String
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type DimentionalDataStructure {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    attributeComponents: [AttributeComponent]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    identifierComponents: [IdentifierComponent]
    lastUpdatedBy: String
    lastUpdatedDate: String
    measureComponents: [MeasureComponent]
    name: [MultilingualText]
    parentStructure: String
    planDate: String
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type EnumeratedValueDomain {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    dataType: String
    description: [MultilingualText]
    id: String
    klassUrl: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type ExchangeChannel {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    exchangeType: String
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    protocol: [Protocol]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type IdentifierComponent {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    format: String
    id: String
    isComposite: [Boolean]
    isUnique: [Boolean]
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    representedVariable: [RepresentedVariable]
    role: String
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type InformationProvider {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type InstanceVariable {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    population: [Population]
    representedVariable: [RepresentedVariable]
    sentinelValueDomain: [SentinelValueDomain]
    sourceName: String
    sourcePath: String
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type LogicalRecord {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    attributeComponents: [AttributeComponent]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    identifierComponents: [IdentifierComponent]
    lastUpdatedBy: String
    lastUpdatedDate: String
    measureComponents: [MeasureComponent]
    name: [MultilingualText]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type MeasureComponent {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    format: String
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    representedVariable: [RepresentedVariable]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type MultilingualText {
    languageCode: String
    languageText: String
}

type Population {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    geography: String
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    populationType: String
    referencePeriod: String
    respondantUnitType: [UnitType]
    unitType: [UnitType]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type Protocol {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    protocolType: String
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type ProvisionAgreement {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    changeManagement: changeManagement
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    exchangeChannel: [ExchangeChannel]
    frequency: String
    id: String
    informationProvider: [InformationProvider]
    informationSource: informationSource
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    regulation: String
    status: String
    validFrom: String
    validUntil: String
    valuation: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type Query {
}

type RecordRelationship {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    relationType: String
    sourceLogicalRecords: [LogicalRecord]
    targetLogicalRecords: [LogicalRecord]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type RepresentedVariable {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    substantiveValueDomain: [SubstantiveValueDomain]
    validFrom: String
    validUntil: String
    variable: [Variable]
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type Role {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type SentinelValueDomain {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    dataType: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    validFrom: String
    validUntil: String
    valueDomain: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type SubstantiveValueDomain {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    dataType: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    validFrom: String
    validUntil: String
    valueDomain: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type UnitDataSet {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    dataExistsFromDate: String
    dataExistsUntilDate: String
    dataResource: [DataResource]
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    temporalityType: String
    unitDataStructure: [UnitDataStructure]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type UnitDataStructure {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    logicalRecords: [LogicalRecord]
    name: [MultilingualText]
    parentStructure: String
    planDate: String
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type UnitType {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type Variable {
    administrativeDetails: [AdministrativeDetails]
    administrativeStatus: String
    agentInRoles: [AgentInRole]
    createdBy: String
    createdDate: String
    description: [MultilingualText]
    id: String
    lastUpdatedBy: String
    lastUpdatedDate: String
    name: [MultilingualText]
    unitType: [UnitType]
    validFrom: String
    validUntil: String
    version: String
    versionRationale: [MultilingualText]
    versionValidFrom: String
}

type changeManagement {
    languageCode: String
    languageText: String
}

type informationSource {
    languageCode: String
    languageText: String
}